{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/Api\";\nconst addPost = 'ADD-POST';\nconst setUserProfileCase = 'SET-USER-PROFILE';\nconst setStatusCase = 'SET-STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi how are you?',\n    likesCount: 10\n  }, {\n    id: 2,\n    message: 'It is my 1st post',\n    likesCount: 15\n  }, {\n    id: 3,\n    message: 'Haha how are you mate?',\n    likesCount: 18\n  }, {\n    id: 4,\n    message: 'Sweet as!',\n    likesCount: 46\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  // debugger;\n  switch (action.type) {\n    case addPost:\n      {\n        let newPost = {\n          id: 10,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case setUserProfileCase:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case setStatusCase:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //Action creators\n\n\nexport const addPostActionCreator = newPostText => ({\n  type: addPost,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: setUserProfileCase,\n  profile\n});\nexport const setStatus = status => ({\n  type: setStatusCase,\n  status\n}); //Thunks\n\nexport const getUserProfile = userId => dispatch => {\n  return usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Redux/profileReducer.js"],"names":["profileAPI","usersAPI","addPost","setUserProfileCase","setStatusCase","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/Api\";\n\nconst addPost = 'ADD-POST';\nconst setUserProfileCase = 'SET-USER-PROFILE';\nconst setStatusCase = 'SET-STATUS'\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi how are you?', likesCount: 10},\n        {id: 2, message: 'It is my 1st post', likesCount: 15},\n        {id: 3, message: 'Haha how are you mate?', likesCount: 18},\n        {id: 4, message: 'Sweet as!', likesCount: 46},\n    ],\n    profile: null,\n    status: '',\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    // debugger;\n    switch (action.type) {\n\n        case addPost: {\n            let newPost = {\n                id: 10,\n                message: action.newPostText,\n                likesCount: 0,\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n\n        case setUserProfileCase: {\n            return {\n                ...state,\n                profile: action.profile,\n            }\n        }\n\n        case setStatusCase: {\n            return {\n                ...state,\n                status: action.status,\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport const addPostActionCreator = (newPostText) => ({type: addPost, newPostText})\nexport const setUserProfile = (profile) => ({type: setUserProfileCase, profile})\nexport const setStatus = (status) => ({type: setStatusCase, status});\n\n//Thunks\nexport const getUserProfile = (userId) => (dispatch) => {\n    return usersAPI.getProfile(userId).then(response => {\n        dispatch(setUserProfile(response.data));\n    })\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n     profileAPI.getStatus(userId)\n        .then(response => {\n            dispatch(setStatus(response.data));\n        })\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        });\n}\n\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}