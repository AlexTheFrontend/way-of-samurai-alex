{"ast":null,"code":"const follow = 'FOLLOW-USER';\nconst unfollow = 'UNFOLLOW-USER';\nconst setUsers = 'SET-USERS';\nconst setCurrentPage = 'SET-CURRENT-PAGE';\nconst setTotalUsersCount = 'SET-TOTAL-USERS-COUNT';\nconst toggleIsFetching = 'TOGGLE-IS-FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  // debugger;\n  switch (action.type) {\n    case follow:\n      return { ...state,\n        // users: state.users.map(u => u),\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case unfollow:\n      return { ...state,\n        // users: state.users.map(u => u),\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case setUsers:\n      return { ...state,\n        users: action.users\n      };\n\n    case setCurrentPage:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case setTotalUsersCount:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case toggleIsFetching:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n}; // Clean F to return actions\n\n\nexport const followAC = userId => ({\n  type: follow,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: unfollow,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: setUsers,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: setCurrentPage,\n  currentPage\n});\nexport const setUsersTotalCountAC = totalUsersCount => ({\n  type: setTotalUsersCount,\n  count: totalUsersCount\n});\nexport const toggleIsFetchingAC = isFetching => ({\n  type: toggleIsFetching,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Redux/usersReducer.js"],"names":["follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","count","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["const follow = 'FOLLOW-USER';\nconst unfollow = 'UNFOLLOW-USER';\nconst setUsers = 'SET-USERS';\nconst setCurrentPage = 'SET-CURRENT-PAGE';\nconst setTotalUsersCount = 'SET-TOTAL-USERS-COUNT';\nconst toggleIsFetching = 'TOGGLE-IS-FETCHING';\n\nlet initialState = {\n  users: [ ],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n  // debugger;\n  switch (action.type) {\n    case follow:\n      return {\n        ...state,\n        // users: state.users.map(u => u),\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: true}\n          }\n          return u;\n        })\n      }\n    case unfollow:\n      return {\n        ...state,\n        // users: state.users.map(u => u),\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: false}\n          }\n          return u;\n        })\n      }\n    case setUsers:\n      return {\n        ...state,\n        users: action.users\n      }\n\n      case setCurrentPage:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      }\n\n      case setTotalUsersCount:\n      return {\n        ...state,\n        totalUsersCount: action.count\n      }\n      case toggleIsFetching:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    default:\n      return state;\n  }\n}\n\n// Clean F to return actions\nexport const followAC = (userId) => ({type: follow, userId});\nexport const unfollowAC = (userId) => ({type: unfollow, userId});\nexport const setUsersAC = (users) => ({type: setUsers, users});\nexport const setCurrentPageAC = (currentPage) => ({type: setCurrentPage, currentPage});\nexport const setUsersTotalCountAC = (totalUsersCount) => ({type: setTotalUsersCount, count: totalUsersCount});\nexport const toggleIsFetchingAC = (isFetching) => ({type: toggleIsFetching, isFetching})\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}