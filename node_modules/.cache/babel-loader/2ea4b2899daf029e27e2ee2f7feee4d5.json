{"ast":null,"code":"var _jsxFileName = \"/Users/admin/way-of-samurai-alex/src/Components/Profile/ProfileContainer.js\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, updateStatus } from \"../../Redux/profileReducer\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\"; // container component for Profile\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId; //default profile\n\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId); // setTimeout(() => {\n\n    this.props.getStatus(userId); // }, 1000)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n} //returning an object\n\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter // withAuthRedirect\n)(ProfileContainer);","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Components/Profile/ProfileContainer.js"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","withRouter","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorisedUserId","history","push","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,YAAnC,QAAsD,4BAAtD;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB,C,CAEA;;;;AACA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CADgB,CAEhB;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWR,cAAX,CAA0BO,MAA1B,EATgB,CAUhB;;AACA,SAAKC,KAAL,CAAWT,SAAX,CAAqBQ,MAArB,EAXgB,CAYhB;AAEH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,OAAa,KAAKN,KAAlB;AACS,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWO,OAD7B;AAES,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAF5B;AAGS,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWP;AAHlC;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzB0C,C,CA4B/C;;;AACA,IAAIgB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BL,EAAAA,gBAAgB,EAAEO,KAAK,CAACE,IAAN,CAAWb,MAHC;AAI9Bc,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAOA,eAAelB,OAAO,CAClBL,OAAO,CAACmB,eAAD,EAAkB;AAACjB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BE,EAAAA;AAA5B,CAAlB,CADW,EAElBC,UAFkB,CAGlB;AAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profileReducer\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\n// container component for Profile\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        //default profile\n        if (!userId) {\n            userId = this.props.authorisedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        // setTimeout(() => {\n        this.props.getStatus(userId);\n        // }, 1000)\n\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        );\n    }\n}\n\n//returning an object\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorisedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);\n\n"]},"metadata":{},"sourceType":"module"}