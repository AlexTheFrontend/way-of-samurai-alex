{"ast":null,"code":"var _jsxFileName = \"/Users/alexthefrontend/way-of-samurai-alex/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // storing data for practice purposes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet posts = [{\n  id: 1,\n  message: 'Hi how are you?',\n  likesCount: 10\n}, {\n  id: 2,\n  message: 'It is my 1st post',\n  likesCount: 15\n}, {\n  id: 2,\n  message: 'Haha how are you mate?',\n  likesCount: 18\n}, {\n  id: 2,\n  message: 'Sweet as!',\n  likesCount: 46\n}];\nlet dialogs = [{\n  id: 1,\n  name: 'Sergey'\n}, {\n  id: 2,\n  name: 'Dennis'\n}, {\n  id: 3,\n  name: 'Roman'\n}, {\n  id: 4,\n  name: 'Nadya'\n}, {\n  id: 5,\n  name: 'Dima'\n}, {\n  id: 6,\n  name: 'Julia'\n}];\nlet messages = [{\n  id: 1,\n  message: 'Hello'\n}, {\n  id: 2,\n  message: 'Sup!'\n}, {\n  id: 3,\n  message: 'Bruuuuuuuu'\n}, {\n  id: 4,\n  message: 'I like this social network!'\n}, {\n  id: 5,\n  message: 'Haha me too!'\n}, {\n  id: 6,\n  message: 'Who made it?'\n}, {\n  id: 7,\n  message: 'Some Russian developer, I think'\n}, {\n  id: 8,\n  message: 'I want to hire him now!'\n}];\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    posts: posts,\n    dialogs: dialogs,\n    messages: messages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/alexthefrontend/way-of-samurai-alex/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","posts","id","message","likesCount","dialogs","name","messages","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;;AAEA,IAAIC,KAAK,GAAG,CACR;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE,iBAAjB;AAAoCC,EAAAA,UAAU,EAAE;AAAhD,CADQ,EAER;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE,mBAAjB;AAAsCC,EAAAA,UAAU,EAAE;AAAlD,CAFQ,EAGR;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE,wBAAjB;AAA2CC,EAAAA,UAAU,EAAE;AAAvD,CAHQ,EAIR;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE,WAAjB;AAA8BC,EAAAA,UAAU,EAAE;AAA1C,CAJQ,CAAZ;AAOA,IAAIC,OAAO,GAAG,CACV;AAACH,EAAAA,EAAE,EAAE,CAAL;AAAQI,EAAAA,IAAI,EAAE;AAAd,CADU,EAEV;AAACJ,EAAAA,EAAE,EAAE,CAAL;AAAQI,EAAAA,IAAI,EAAE;AAAd,CAFU,EAGV;AAACJ,EAAAA,EAAE,EAAE,CAAL;AAAQI,EAAAA,IAAI,EAAE;AAAd,CAHU,EAIV;AAACJ,EAAAA,EAAE,EAAE,CAAL;AAAQI,EAAAA,IAAI,EAAE;AAAd,CAJU,EAKV;AAACJ,EAAAA,EAAE,EAAE,CAAL;AAAQI,EAAAA,IAAI,EAAE;AAAd,CALU,EAMV;AAACJ,EAAAA,EAAE,EAAE,CAAL;AAAQI,EAAAA,IAAI,EAAE;AAAd,CANU,CAAd;AASA,IAAIC,QAAQ,GAAG,CACX;AAACL,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CADW,EAEX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CAFW,EAGX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CAHW,EAIX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CAJW,EAKX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CALW,EAMX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CANW,EAOX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CAPW,EAQX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CARW,CAAf;AAWAL,QAAQ,CAACU,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,GAAD;AAAK,IAAA,KAAK,EAAEP,KAAZ;AAAmB,IAAA,OAAO,EAAEI,OAA5B;AAAqC,IAAA,QAAQ,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAIIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ,E,CAOA;AACA;AACA;;AACAV,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// storing data for practice purposes\n\nlet posts = [\n    {id: 1, message: 'Hi how are you?', likesCount: 10},\n    {id: 2, message: 'It is my 1st post', likesCount: 15},\n    {id: 2, message: 'Haha how are you mate?', likesCount: 18},\n    {id: 2, message: 'Sweet as!', likesCount: 46},\n]\n\nlet dialogs = [\n    {id: 1, name: 'Sergey'},\n    {id: 2, name: 'Dennis'},\n    {id: 3, name: 'Roman'},\n    {id: 4, name: 'Nadya'},\n    {id: 5, name: 'Dima'},\n    {id: 6, name: 'Julia'},\n];\n\nlet messages = [\n    {id: 1, message: 'Hello'},\n    {id: 2, message: 'Sup!'},\n    {id: 3, message: 'Bruuuuuuuu'},\n    {id: 4, message: 'I like this social network!'},\n    {id: 5, message: 'Haha me too!'},\n    {id: 6, message: 'Who made it?'},\n    {id: 7, message: 'Some Russian developer, I think'},\n    {id: 8, message: 'I want to hire him now!'},\n];\n\nReactDOM.render(\n    <React.StrictMode>\n        <App posts={posts} dialogs={dialogs} messages={messages}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}