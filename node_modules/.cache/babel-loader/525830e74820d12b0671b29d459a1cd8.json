{"ast":null,"code":"var _jsxFileName = \"/Users/admin/way-of-samurai-alex/src/Components/Dialogs/Dialogs.js\";\nimport React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  // creating local variable for props\n  let state = props.messagesPage; // with props.messages I am taking data from the level above\n\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogsItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }, this)); // with props.messages I am taking data from the level above\n\n  let messageElements = state.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message,\n    id: m.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this));\n  let newMessageBody = state.newMessageBody; //\n  // let newMessageElement = React.createRef();\n\n  let onSendMessageClick = () => {\n    props.sendMessage();\n  };\n\n  let onNewMessageChange = e => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.d,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dialogItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newMessageBody,\n        onChange: onNewMessageChange,\n        placeholder: 'Type your message here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSendMessageClick,\n          children: \"Add message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Components/Dialogs/Dialogs.js"],"names":["React","styles","DialogsItem","Message","Dialogs","props","state","messagesPage","dialogsElements","dialogs","map","d","name","id","messageElements","messages","m","message","newMessageBody","onSendMessageClick","sendMessage","onNewMessageChange","e","body","target","value","updateNewMessageBody","dialogItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB;AACA,MAAIC,KAAK,GAAGD,KAAK,CAACE,YAAlB,CAHyB,CAKzB;;AACA,MAAIC,eAAe,GAAGF,KAAK,CAACG,OAAN,CACjBC,GADiB,CACbC,CAAC,iBAAI,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,CAAC,CAACC,IAArB;AAA2B,IAAA,EAAE,EAAED,CAAC,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,UADQ,CAAtB,CANyB,CASzB;;AACA,MAAIC,eAAe,GAAGR,KAAK,CAACS,QAAN,CACjBL,GADiB,CACbM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAA6B,IAAA,EAAE,EAAED,CAAC,CAACH;AAAnC;AAAA;AAAA;AAAA;AAAA,UADQ,CAAtB;AAGA,MAAIK,cAAc,GAAGZ,KAAK,CAACY,cAA3B,CAbyB,CAczB;AACA;;AAEA,MAAIC,kBAAkB,GAAG,MAAM;AAC7Bd,IAAAA,KAAK,CAACe,WAAN;AACD,GAFD;;AAIA,MAAIC,kBAAkB,GAAIC,CAAD,IAAO;AAC/B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACApB,IAAAA,KAAK,CAACqB,oBAAN,CAA2BH,IAA3B;AACA,GAHD;;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACU,CAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEV,MAAM,CAAC0B,WAAvB;AAAA,gBACGnB;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACc,QAAvB;AAAA,8BACE;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACI,QAAA,KAAK,EAAEI,cADX;AAEI,QAAA,QAAQ,EAAEG,kBAFd;AAGI,QAAA,WAAW,EAAE;AAHjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEF,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBD,CA/CD;;KAAMf,O;AAiDN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport Message from \"./Message/Message\";\n\nconst Dialogs = (props) => {\n\n  // creating local variable for props\n  let state = props.messagesPage;\n\n  // with props.messages I am taking data from the level above\n  let dialogsElements = state.dialogs\n      .map(d => <DialogsItem name={d.name} id={d.id}/>);\n\n  // with props.messages I am taking data from the level above\n  let messageElements = state.messages\n      .map(m => <Message message={m.message} id={m.id}/>);\n\n  let newMessageBody = state.newMessageBody;\n  //\n  // let newMessageElement = React.createRef();\n\n  let onSendMessageClick = () => {\n    props.sendMessage();\n  }\n\n  let onNewMessageChange = (e) => {\n   let body = e.target.value;\n   props.updateNewMessageBody(body);\n  }\n\n  return (\n\n      <div className={styles.d}>\n        <div className={styles.dialogItems}>\n          {dialogsElements}\n        </div>\n        <div className={styles.messages}>\n          <div>{messageElements}</div>\n          <textarea\n              value={newMessageBody}\n              onChange={onNewMessageChange}\n              placeholder={'Type your message here'}\n          />\n          <div>\n            <button onClick={onSendMessageClick}>Add message</button>\n          </div>\n        </div>\n      </div>\n\n\n  )\n}\n\nexport default Dialogs;\n\n"]},"metadata":{},"sourceType":"module"}