{"ast":null,"code":"var _jsxFileName = \"/Users/admin/way-of-samurai-alex/src/Components/Users/UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCurrentPage, toggleFollowingProgress, requestUsers, follow, unfollow } from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount } from \"../../Redux/userSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChange = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    //Refactoring with thunks\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    // <> in this case is zaglushka\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChange: this.onPageChange,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        toggleFollowingProgress: this.props.toggleFollowingProgress,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n} // let mapStateToProps = (state) => {\n//     return {\n//         // getting state from users page as a container component\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress,\n//     };\n// }\n// let AuthRedirectComponent = withAuthRedirect(UsersContainer);\n\n\nlet mapStateToProps = state => {\n  return {\n    // getting state from users page as a container component\n    // users: getUsers(state),\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose( // withAuthRedirect,\nconnect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Components/Users/UsersContainer.js"],"names":["React","connect","setCurrentPage","toggleFollowingProgress","requestUsers","follow","unfollow","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","UsersContainer","Component","onPageChange","pageNumber","props","getUsers","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,cADJ,EAEIC,uBAFJ,EAGIC,YAHJ,EAIIC,MAJJ,EAIYC,QAJZ,QAKO,0BALP;AAMA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,kBALJ,QAMO,2BANP;;;;AAQA,MAAMC,cAAN,SAA6Bf,KAAK,CAACgB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAOzCC,YAPyC,GAOzBC,UAAD,IAAgB;AAC3B,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB,EAAgC,KAAKC,KAAL,CAAWE,QAA3C;AACH,KATwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKH,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWI,WAA/B,EAA4C,KAAKJ,KAAL,CAAWE,QAAvD;AACH;;AAMDG,EAAAA,MAAM,GAAG;AACL;AACA,wBAAO;AAAA,iBACF,KAAKL,KAAL,CAAWM,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IADrC,eAEH,QAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WAF/B;AAGO,QAAA,YAAY,EAAE,KAAKN,YAH1B;AAIO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWQ,KAJzB;AAKO,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWd,MAL1B;AAMO,QAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWb,QAN5B;AAOO,QAAA,uBAAuB,EAAE,KAAKa,KAAL,CAAWhB,uBAP3C;AAQO,QAAA,mBAAmB,EAAE,KAAKgB,KAAL,CAAWS;AARvC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAaH;;AA1BwC,C,CA6B7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACH;AACA;AACAH,IAAAA,KAAK,EAAEP,QAAQ,CAACU,KAAD,CAHZ;AAIHT,IAAAA,QAAQ,EAAER,WAAW,CAACiB,KAAD,CAJlB;AAKHJ,IAAAA,eAAe,EAAEZ,kBAAkB,CAACgB,KAAD,CALhC;AAMHP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CANxB;AAOHL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CAPtB;AAQHF,IAAAA,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAD;AARxC,GAAP;AAUH,CAXD;;AAaA,eAAerB,OAAO,EAClB;AACAR,OAAO,CAAC4B,eAAD,EAAkB;AACrBxB,EAAAA,MADqB;AAErBC,EAAAA,QAFqB;AAGrBJ,EAAAA,cAHqB;AAIrBC,EAAAA,uBAJqB;AAKrBiB,EAAAA,QAAQ,EAAEhB;AALW,CAAlB,CAFW,CAAP,CASbW,cATa,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    setCurrentPage,\n    toggleFollowingProgress,\n    requestUsers,\n    follow, unfollow\n} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount\n} from \"../../Redux/userSelectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        //Refactoring with thunks\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChange = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        // <> in this case is zaglushka\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChange={this.onPageChange}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n// let mapStateToProps = (state) => {\n//     return {\n//         // getting state from users page as a container component\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress,\n//     };\n// }\n\n// let AuthRedirectComponent = withAuthRedirect(UsersContainer);\n\nlet mapStateToProps = (state) => {\n    return {\n        // getting state from users page as a container component\n        // users: getUsers(state),\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    };\n}\n\nexport default compose(\n    // withAuthRedirect,\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers: requestUsers\n    })\n)(UsersContainer)\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}