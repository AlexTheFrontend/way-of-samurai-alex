{"ast":null,"code":"import { createSelector } from 'reselect';\nexport const getUsers = state => {\n  return state.usersPage.users;\n}; // filtration\n\nexport const getUsersSelector = state => {\n  return getUsers(state).filter(u => true);\n}; // State is coming from the parent component,\n// 1st parameter needs a primitive selector as a 1st props\n\nexport const getUsersSuperSelector = createSelector(getUsers, users => {\n  return users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.users;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Redux/userSelectors.js"],"names":["createSelector","getUsers","state","usersPage","users","getUsersSelector","filter","u","getUsersSuperSelector","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMC,gBAAgB,GAAIH,KAAD,IAAW;AACvC,SAAOD,QAAQ,CAACC,KAAD,CAAR,CAAgBI,MAAhB,CAAuBC,CAAC,IAAI,IAA5B,CAAP;AACH,CAFM,C,CAIP;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAGR,cAAc,CAACC,QAAD,EAAYG,KAAD,IAAW;AACrE,SAAOA,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAI,IAAlB,CAAP;AACH,CAFkD,CAA5C;AAIP,OAAO,MAAME,WAAW,GAAIP,KAAD,IAAW;AAClC,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACH,CAFM;AAIP,OAAO,MAAMM,kBAAkB,GAAIR,KAAD,IAAW;AACzC,SAAOA,KAAK,CAACC,SAAN,CAAgBQ,eAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAIV,KAAD,IAAW;AACrC,SAAOA,KAAK,CAACC,SAAN,CAAgBU,WAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAIZ,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACC,SAAN,CAAgBY,UAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,sBAAsB,GAAId,KAAD,IAAW;AAC7C,SAAOA,KAAK,CAACC,SAAN,CAAgBc,mBAAvB;AACH,CAFM","sourcesContent":["import {createSelector} from 'reselect'\n\nexport const getUsers = (state) => {\n    return state.usersPage.users;\n}\n\n// filtration\nexport const getUsersSelector = (state) => {\n    return getUsers(state).filter(u => true)\n}\n\n// State is coming from the parent component,\n// 1st parameter needs a primitive selector as a 1st props\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n"]},"metadata":{},"sourceType":"module"}