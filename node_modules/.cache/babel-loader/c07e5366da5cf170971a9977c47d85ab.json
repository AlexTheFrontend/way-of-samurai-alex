{"ast":null,"code":"import { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\"; // State functions\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n}; // Callback functions\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: text => dispatch(updateNewPostTextActionCreator(text)),\n    addPost: () => dispatch(addPostActionCreator())\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Components/Profile/MyPosts/MyPostsContainer.js"],"names":["addPostActionCreator","updateNewPostTextActionCreator","MyPosts","connect","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","updateNewPostText","text","addPost","MyPostsContainer"],"mappings":"AAAA,SAAQA,oBAAR,EAA8BC,8BAA9B,QAAmE,+BAAnE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBD,KADpB;AAELE,IAAAA,WAAW,EAAEH,KAAK,CAACE,WAAN,CAAkBC;AAF1B,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,iBAAiB,EAAGC,IAAD,IAAUF,QAAQ,CAACT,8BAA8B,CAACW,IAAD,CAA/B,CADhC;AAELC,IAAAA,OAAO,EAAE,MAAMH,QAAQ,CAACV,oBAAoB,EAArB;AAFlB,GAAP;AAID,CALD;;AAOA,MAAMc,gBAAgB,GAAGX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAeY,gBAAf","sourcesContent":["import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n// State functions\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  }\n}\n\n// Callback functions\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewPostText: (text) => dispatch(updateNewPostTextActionCreator(text)),\n    addPost: () => dispatch(addPostActionCreator())\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n"]},"metadata":{},"sourceType":"module"}