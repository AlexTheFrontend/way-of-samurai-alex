{"ast":null,"code":"import { sendMessageCreator, updateNewMessageBodyCreator } from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\"; // import StoreContext from \"../../StoreContext\";\n// debugger;\n// const DialogsContainer = () => {\n//\n//   return (<StoreContext.Consumer>\n//         {\n//         (store) => {\n//           let state = store.getState().messagesPage;\n//\n//           let onSendMessageClick = () => {\n//             store.dispatch(sendMessageCreator())\n//           }\n//\n//           let onNewMessageChange = (body) => {\n//             store.dispatch(updateNewMessageBodyCreator(body))\n//           }\n//\n//           return (\n//               <Dialogs\n//                   updateNewMessageBody={onNewMessageChange}\n//                   sendMessage={onSendMessageClick}\n//                   dialogsPage={state}\n//               />);\n//         }\n//       }\n//       </StoreContext.Consumer>\n//\n//   );\n// }\n\nlet mapStateToProps = state => {\n  return {\n    // Data from state (which is Store before)\n    messagesPage: state.messagesPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    //  callback F\n    sendMessage: () => dispatch(sendMessageCreator()),\n    updateNewMessageBody: body => dispatch(updateNewMessageBodyCreator(body))\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Components/Dialogs/DialogsContainer.js"],"names":["sendMessageCreator","updateNewMessageBodyCreator","Dialogs","connect","mapStateToProps","state","messagesPage","mapDispatchToProps","dispatch","sendMessage","updateNewMessageBody","body","DialogsContainer"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,2BAA5B,QAA8D,4BAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACL;AACAC,IAAAA,YAAY,EAAED,KAAK,CAACC;AAFf,GAAP;AAID,CALD;;AASA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACP;AACEC,IAAAA,WAAW,EAAE,MAAMD,QAAQ,CAACR,kBAAkB,EAAnB,CAFtB;AAGLU,IAAAA,oBAAoB,EAAGC,IAAD,IAAUH,QAAQ,CAACP,2BAA2B,CAACU,IAAD,CAA5B;AAHnC,GAAP;AAKD,CAND;;AAQA,MAAMC,gBAAgB,GAAGT,OAAO,CAACC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CL,OAA7C,CAAzB;AAGA,eAAeU,gBAAf","sourcesContent":["import {sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n\n// import StoreContext from \"../../StoreContext\";\n\n// debugger;\n// const DialogsContainer = () => {\n//\n//   return (<StoreContext.Consumer>\n//         {\n//         (store) => {\n//           let state = store.getState().messagesPage;\n//\n//           let onSendMessageClick = () => {\n//             store.dispatch(sendMessageCreator())\n//           }\n//\n//           let onNewMessageChange = (body) => {\n//             store.dispatch(updateNewMessageBodyCreator(body))\n//           }\n//\n//           return (\n//               <Dialogs\n//                   updateNewMessageBody={onNewMessageChange}\n//                   sendMessage={onSendMessageClick}\n//                   dialogsPage={state}\n//               />);\n//         }\n//       }\n//       </StoreContext.Consumer>\n//\n//   );\n// }\n\nlet mapStateToProps = (state) => {\n  return {\n    // Data from state (which is Store before)\n    messagesPage: state.messagesPage,\n  };\n}\n\n\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n  //  callback F\n    sendMessage: () => dispatch(sendMessageCreator()),\n    updateNewMessageBody: (body) => dispatch(updateNewMessageBodyCreator(body)),\n  };\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\n\nexport default DialogsContainer;\n\n"]},"metadata":{},"sourceType":"module"}