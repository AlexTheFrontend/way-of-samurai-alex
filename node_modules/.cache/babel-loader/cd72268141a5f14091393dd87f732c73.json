{"ast":null,"code":"var _jsxFileName = \"/Users/admin/way-of-samurai-alex/src/HOC/withAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\"; //checking for authorisation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 44\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedRedirectComponent;\n};","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/HOC/withAuthRedirect.js"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props","ConnectedRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;;;AACA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAE3C,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACxB,0BAAO,QAAC,SAAD,OAAe,KAAKM;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAOhD,MAAIC,0BAA0B,GAAGV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAAjC;AAEA,SAAOG,0BAAP;AACH,CAZM","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router\";\nimport {connect} from \"react-redux\";\n\n//checking for authorisation\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent\n}\n"]},"metadata":{},"sourceType":"module"}