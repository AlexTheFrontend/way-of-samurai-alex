{"ast":null,"code":"var _jsxFileName = \"/Users/admin/way-of-samurai-alex/src/Components/Users/UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, toggleIsFetchingAC, unfollowAC } from \"../../Redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChange = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false); // as per provided API\n\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false); // as per provided API\n\n      this.props.setUsers(response.data.items);\n      this.props.setTotalCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    // <> in this case is zaglushka\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChange: this.onPageChange,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    // getting state from users page as a container component\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    //  callback F\n    follow: userId => dispatch(followAC(userId)),\n    unfollow: userId => dispatch(unfollowAC(userId)),\n    setUsers: users => dispatch(setUsersAC(users)),\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/admin/way-of-samurai-alex/src/Components/Users/UsersContainer.js"],"names":["React","connect","followAC","setCurrentPageAC","setUsersAC","setUsersTotalCountAC","toggleIsFetchingAC","unfollowAC","axios","Users","Preloader","UsersContainer","Component","onPageChange","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalCount","totalCount","render","isFetching","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n  followAC,\n  setCurrentPageAC,\n  setUsersAC,\n  setUsersTotalCountAC,\n  toggleIsFetchingAC,\n  unfollowAC\n} from \"../../Redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../Common/Preloader/Preloader\";\n\nclass UsersContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n        .then(response => {\n          this.props.toggleIsFetching(false);\n          // as per provided API\n          this.props.setUsers(response.data.items);\n          this.props.setTotalCount(response.data.totalCount);\n        })\n  }\n\n  onPageChange = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n        .then(response => {\n          this.props.toggleIsFetching(false);\n          // as per provided API\n          this.props.setUsers(response.data.items)\n        })\n  }\n\n  render() {\n    // <> in this case is zaglushka\n    return <>\n      {this.props.isFetching ? <Preloader /> : null}\n      <Users totalUsersCount={this.props.totalUsersCount}\n             pageSize={this.props.pageSize}\n             currentPage={this.props.currentPage}\n             onPageChange={this.onPageChange}\n             users={this.props.users}\n             follow={this.props.follow}\n             unfollow={this.props.unfollow}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    // getting state from users page as a container component\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n\n  };\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    //  callback F\n    follow: (userId) => dispatch(followAC(userId)),\n    unfollow: (userId) => dispatch(unfollowAC(userId)),\n    setUsers: (users) => dispatch(setUsersAC(users)),\n    setCurrentPage: (pageNumber) => {\n      dispatch(setCurrentPageAC(pageNumber))\n    },\n    setTotalCount: (totalCount) => {\n      dispatch(setUsersTotalCountAC(totalCount))\n    },\n    toggleIsFetching: (isFetching) => {\n      dispatch(toggleIsFetchingAC(isFetching))\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n\n\n\n"]},"metadata":{},"sourceType":"module"}